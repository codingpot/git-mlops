name: "Run experiments with JarvisLabs and DVCLive"
description: "Run experiments with JarvisLabs and DVCLive"
inputs:
  CUR_BRANCH:
    required: true
  CUR_PR_ID:
    required: true
  GDRIVE_CREDENTIAL:
    required: true
  GH_ACCESS_TOKEN:
    required: true
  JARVISLABS_ID:
    required: true
  JARVISLABS_ACCESS_TOKEN:
    required: true
runs:
  using: "composite"
  steps:      
      - name: prepare script
        if: steps.check.outputs.triggered == 'true'      
        env:
          CUR_BRANCH: ${{ steps.pr_data.outputs.branch }}
          CUR_PR_ID: ${{ steps.pr_data.outputs.number }}
          GDRIVE_CREDENTIAL: ${{ secrets.GDRIVE_CREDENTIAL }}
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          CLOUD_ID: ${{ env.JARVISLABS_ID }}
          CLOUD_AT: ${{ env.JARVISLABS_ACCESS_TOKEN }}
        run: |
          envsubst \
            '$CUR_BRANCH, \
             $CUR_PR_ID, \
             $GDRIVE_CREDENTIAL, \
             $GH_ACCESS_TOKEN, \
             $CLOUD_ID, \
             $CLOUD_AT' \
             < scripts/experiments.sh \
             > scripts/experiments_tmp.sh
             
      - name: install jarvislabs client
        if: steps.check.outputs.triggered == 'true'      
        run: |
          pip install typer
          pip install git+https://github.com/jarvislabsai/jlclient.git
          
      - name: add script to jarvislabs
        id: add_script
        if: steps.check.outputs.triggered == 'true'        
        run: |
          python clouds/jarvislabs.py \
            script add \
              ${{ env.CLOUD_AT }} ${{ env.CLOUD_ID }} scripts/experiments_tmp.sh \
                > outputs.txt
          echo "::set-output name=script_id::$(cat outputs.txt)"
          
      - name: create vm on jarvislabs
        if: steps.check.outputs.triggered == 'true'      
        run: |
          python clouds/jarvislabs.py \
            vm create \
              ${{ env.CLOUD_AT }} ${{ env.CLOUD_ID }} ${{ steps.add_script.outputs.script_id }}
              
      - name: remove script from jarvislabs
        if: steps.check.outputs.triggered == 'true'      
        run: |
          python clouds/jarvislabs.py \
            script remove \
              ${{ env.CLOUD_AT }} ${{ env.CLOUD_ID }} ${{ steps.add_script.outputs.script_id }}